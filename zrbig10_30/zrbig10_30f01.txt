*&---------------------------------------------------------------------*
*&  Include           ZRBIG10_30F01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  SET_INIT_VALUE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_init_value .
  p_bukrs = 1000.
  p_gjahr = sy-datum(4).

  s_blart-sign    = 'I'.
  s_blart-option  = 'EQ'.
  s_blart-low     = 'RV'.
  APPEND s_blart.
  CLEAR s_blart.

  s_blart-sign    = 'I'.
  s_blart-option  = 'EQ'.
  s_blart-low     = 'DZ'.
  APPEND s_blart.
  CLEAR s_blart.

  s_monat-sign    = 'I'.
  s_monat-option  = 'BT'.
  s_monat-low     = 6.
  s_monat-high    = sy-datum+4(2).
  APPEND s_monat.
  CLEAR s_monat.

  s_budat-sign    = 'I'.
  s_budat-option  = 'BT'.
  s_budat-low     = '20180601'.
  s_budat-high    = sy-datum.
  APPEND s_budat.
  CLEAR s_budat.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM get_data .

  DATA : lt_body LIKE TABLE OF gs_body.

  CLEAR : gs_body, gt_body.

  SELECT a~gjahr a~belnr a~xblnr bschl kunnr dmbtr a~waers
    INTO CORRESPONDING FIELDS OF TABLE gt_body
    FROM bkpf AS a INNER JOIN bsid AS b
    ON  a~bukrs EQ b~bukrs
    AND a~gjahr EQ b~gjahr
    AND a~belnr EQ b~belnr
    WHERE a~bukrs EQ p_bukrs
    AND   a~gjahr EQ p_gjahr
    AND   a~blart IN s_blart
    AND   a~monat IN s_monat
    AND   a~budat IN s_budat.

  IF gt_body IS NOT INITIAL.

    CLEAR lt_body.
    lt_body = gt_body.

    SORT lt_body BY kunnr ASCENDING.

    DELETE ADJACENT DUPLICATES FROM lt_body COMPARING kunnr.

    CLEAR : gt_kna1, gs_kna1.

    SELECT *
      INTO CORRESPONDING FIELDS OF TABLE gt_kna1
      FROM kna1
      FOR ALL ENTRIES IN lt_body
      WHERE kunnr EQ lt_body-kunnr.

  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM display_data .

  DATA : lv_tabix TYPE sy-tabix.

  SORT gt_kna1 BY kunnr ASCENDING.

  LOOP AT gt_body INTO gs_body.

    lv_tabix = sy-tabix.

    CLEAR gs_kna1.
    READ TABLE gt_kna1 INTO gs_kna1 WITH KEY kunnr = gs_body-kunnr
                                    BINARY SEARCH.

    gs_body-name1 = gs_kna1-name1.

    MODIFY gt_body FROM gs_body INDEX lv_tabix TRANSPORTING name1.

  ENDLOOP.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_SCREEN
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM display_screen .

  PERFORM set_layout.

  CLEAR : gt_fcat, gs_fcat.

  PERFORM set_field_catalog USING:
        "PK field   coltxt                emphasize
        'X' 'GJAHR' 'Fiscal year'         ' ',
        'X' 'BELNR' 'Document no'         ' ',
        ' ' 'XBLNR' 'Ref doc No'          ' ',
        ' ' 'BSCHL' 'Posting key'         ' ',
        ' ' 'KUNNR' 'Customer'            ' ',
        ' ' 'NAME1' 'Name'                'X',
        ' ' 'DMBTR' 'Amount'              ' ',
        ' ' 'WAERS' 'Currency'            ' '.

  IF go_container IS INITIAL.
    PERFORM create_object.

    SET HANDLER : go_handler->on_double_click   FOR go_alv_grid,
                  lcl_event_handler=>on_hotspot FOR go_alv_grid.

    CALL METHOD go_alv_grid->set_table_for_first_display
      EXPORTING
        i_save                        = 'A'
        i_default                     = 'X'
        is_layout                     = gs_layout
      CHANGING
        it_outtab                     = gt_body
        it_fieldcatalog               = gt_fcat
        it_sort                       = gt_sort
      EXCEPTIONS
        invalid_parameter_combination = 1
        program_error                 = 2
        too_many_lines                = 3
        OTHERS                        = 4.
  ELSE.
    CALL METHOD go_alv_grid->refresh_table_display.
  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_LAYOUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_layout .
  gs_layout-zebra       = 'X'.
  gs_layout-sel_mode    = 'D'.
  gs_layout-cwidth_opt  = 'X'.
  gs_layout-totals_bef  = 'X'.

  CLEAR : gt_sort, gs_sort.
  gs_sort-fieldname = 'KUNNR'.
  gs_sort-spos      = 1.
  gs_sort-subtot    = 'X'.

  APPEND gs_sort TO gt_sort.
  CLEAR gs_sort.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_FIELD_CATALOG
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_0234   text
*      -->P_0235   text
*      -->P_0236   text
*      -->P_0237   text
*----------------------------------------------------------------------*
FORM set_field_catalog  USING pv_key pv_field pv_text pv_emphasize.

  gs_fcat-key       = pv_key.
  gs_fcat-fieldname = pv_field.
  gs_fcat-coltext   = pv_text.
  gs_fcat-emphasize = pv_emphasize.

  CASE pv_field.
    WHEN 'DMBTR'.
      gs_fcat-cfieldname = 'WAERS'.
      gs_fcat-do_sum     = 'X'.
    WHEN 'BELNR'.
      gs_fcat-hotspot = 'X'.
  ENDCASE.

  APPEND gs_fcat TO gt_fcat.
  CLEAR gs_fcat.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CREATE_OBJECT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM create_object .

  CREATE OBJECT go_container
    EXPORTING
      repid     = sy-repid
      dynnr     = sy-dynnr
      side      = go_container->dock_at_left
      extension = 3000.

  CREATE OBJECT go_alv_grid
    EXPORTING
      i_parent = go_container.

  CREATE OBJECT go_handler.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  ON_DOUBLE_CLICK
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_E_ROW  text
*      -->P_E_COLUM  text
*----------------------------------------------------------------------*
FORM on_double_click  USING pv_row pv_column.
  MESSAGE i001 WITH 'ROW : ' pv_row 'COLUMN : ' pv_column.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  ON_HOTSPOT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_E_ROW_ID  text
*      -->P_E_COLUM_ID  text
*----------------------------------------------------------------------*
FORM on_hotspot  USING    pv_row_id pv_column_id.
  MESSAGE i001 WITH 'ROW : ' pv_row_id 'COLUMN : ' pv_column_id.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  DATA_SAVE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM data_save .

  DATA : lt_save   TYPE TABLE OF ztbig10_13,
         ls_save   TYPE ztbig10_13,
         lv_answer.

  CALL FUNCTION 'POPUP_TO_CONFIRM'
    EXPORTING
      titlebar              = 'Data save'
      text_question         = 'Are you sure?'
      text_button_1         = 'Yes'(001)
      text_button_2         = 'No'(002)
      display_cancel_button = 'X'
    IMPORTING
      answer                = lv_answer.

  IF lv_answer NE '1'.
    EXIT.
  ENDIF.

*-- Data Move
  LOOP AT gt_body INTO gs_body.

    MOVE-CORRESPONDING gs_body TO ls_save.

    APPEND ls_save TO lt_save.
    CLEAR  ls_save.

  ENDLOOP.

*-- Save query
  MODIFY ztbig10_13 FROM TABLE lt_save.

  IF sy-subrc EQ 0.
    COMMIT WORK.
    MESSAGE s102(k5).
  ELSE.
    ROLLBACK WORK.
    MESSAGE s001 WITH 'Save error'.
  ENDIF.

ENDFORM.

----------------------------------------------------------------------------------
Extracted by Direct Download Enterprise version 1.3.1 - E.G.Mellodew. 1998-2005 UK. Sap Release 750
