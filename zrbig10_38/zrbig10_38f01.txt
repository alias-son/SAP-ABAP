*&---------------------------------------------------------------------*
*&  Include           ZRBIG10_38F01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  SET_INIT_VALUE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_init_value .

  p_rbukrs  = '1000'.
  p_ryear   = sy-datum(4).
  p_monat   = sy-datum+4(2).
  p_rldnr   = '0L'.
  p_rvers   = '1'.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM get_data .

  DATA : lt_body    LIKE gt_body.

*-- Get base data
  CLEAR : gt_body, gs_body.
  SELECT prctr racct
    SUM( hsl01 ) AS hsl01 SUM( hsl02 ) AS hsl02 SUM( hsl03 ) AS hsl03
    SUM( hsl04 ) AS hsl04 SUM( hsl05 ) AS hsl05 SUM( hsl06 ) AS hsl06
    SUM( hsl07 ) AS hsl07 SUM( hsl08 ) AS hsl08 SUM( hsl09 ) AS hsl09
    SUM( hsl10 ) AS hsl10 SUM( hsl11 ) AS hsl11 SUM( hsl12 ) AS hsl12
    INTO CORRESPONDING FIELDS OF TABLE gt_body
    FROM faglflext
    WHERE rbukrs  EQ p_rbukrs
    AND   ryear   EQ p_ryear
    AND   rldnr   EQ p_rldnr
    AND   rvers   EQ p_rvers
    GROUP BY prctr racct.

  IF sy-subrc NE 0.
    MESSAGE s037 DISPLAY LIKE 'E'.
    STOP.
  ENDIF.

*-- Get ktext data
  IF gt_body IS NOT INITIAL.

    lt_body = gt_body.

    SORT lt_body BY prctr.
    DELETE ADJACENT DUPLICATES FROM lt_body COMPARING prctr.

    CLEAR : gt_cepct.

    SELECT *
      INTO CORRESPONDING FIELDS OF TABLE gt_cepct
      FROM cepct
      FOR ALL ENTRIES IN lt_body
      WHERE prctr EQ lt_body-prctr
      AND   spras EQ sy-langu.

*-- Get txt50 data
    IF gt_body IS NOT INITIAL.

      lt_body = gt_body.

      SORT lt_body BY racct.
      DELETE ADJACENT DUPLICATES FROM lt_body COMPARING racct.

      CLEAR : gt_skat.

      SELECT *
        INTO CORRESPONDING FIELDS OF TABLE gt_skat
        FROM skat
        FOR ALL ENTRIES IN lt_body
        WHERE saknr EQ lt_body-racct
        AND   ktopl EQ 'CAIN'
        AND   spras EQ sy-langu.

    ENDIF.

  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM display_data .

  DATA : lv_tabix TYPE sy-tabix.

  SORT gt_cepct BY prctr.
  SORT gt_skat BY saknr.

  LOOP AT gt_body INTO gs_body.

    lv_tabix = sy-tabix.

    CLEAR : gs_cepct.
    READ TABLE gt_cepct INTO gs_cepct WITH KEY prctr = gs_body-prctr
    BINARY SEARCH.

    gs_body-ktext = gs_cepct-ktext.

    CLEAR : gs_skat.
    READ TABLE gt_skat INTO gs_skat WITH KEY saknr = gs_body-racct
    BINARY SEARCH.

    gs_body-txt50 = gs_skat-txt50.

    MODIFY gt_body FROM gs_body INDEX lv_tabix TRANSPORTING ktext txt50.

  ENDLOOP.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_SCREEN100
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM display_screen100 .
  PERFORM set_layout.

  CLEAR : gt_fcat, gt_fcat.
  PERFORM set_field_catalog USING :
      "PK FIELD   COLTXT                 EMPHASIZE
      'X'    'PRCTR'  'Profit center'       ' ',
      ' '    'KTEXT'  'Profit center name'  'X',
      ' '    'RACCT'  'G/L Account'         ' ',
      ' '    'TXT50'  'Account name'        'X',
      ' '    'AMOUNT' 'Amount'              ' '.
  IF go_container IS INITIAL.

    PERFORM create_object.

    CALL METHOD go_alv_grid->set_table_for_first_display
      EXPORTING
        i_save                        = 'A'
        i_default                     = 'X'
        is_layout                     = gs_layout
      CHANGING
        it_outtab                     = gt_body
        it_fieldcatalog               = gt_fcat
      EXCEPTIONS
        invalid_parameter_combination = 1
        program_error                 = 2
        too_many_lines                = 3
        OTHERS                        = 4.
  ELSE.
    CALL METHOD go_alv_grid->refresh_table_display.
  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_LAYOUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_layout .
  CLEAR : gs_layout.
  gs_layout-zebra       = 'X'.
  gs_layout-sel_mode    = 'D'.
  gs_layout-cwidth_opt  = 'X'.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_FIELD_CATALOG
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_0249   text
*      -->P_0250   text
*      -->P_0251   text
*      -->P_0252   text
*----------------------------------------------------------------------*
FORM set_field_catalog  USING pv_key pv_field pv_text pv_emphasize.
  gs_fcat-key       = pv_key.
  gs_fcat-fieldname = pv_field.
  gs_fcat-coltext   = pv_text.
  gs_fcat-emphasize = pv_emphasize.

  APPEND gs_fcat TO gt_fcat.
  CLEAR  gs_fcat.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CREATE_OBJECT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM create_object .
  CREATE OBJECT go_container
    EXPORTING
      repid     = sy-repid
      dynnr     = sy-dynnr
      side      = go_container->dock_at_left
      extension = 3000.
  CREATE OBJECT go_alv_grid
    EXPORTING
      i_parent = go_container.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_AMOUNT_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM get_amount_data .
*-- Get amount data
  DATA : lv_mon(2)  TYPE n,
         lv_var(20),
         lv_tabix   TYPE sy-tabix.

  FIELD-SYMBOLS <lv_fs> TYPE any.

  CLEAR : gs_body.

  LOOP AT gt_body INTO gs_body.
    lv_tabix = sy-tabix.

    CLEAR : lv_mon.

    DO p_monat TIMES.

      lv_mon = lv_mon + 1.

      CLEAR lv_var.
      CONCATENATE 'gs_body-hsl' lv_mon INTO lv_var.

      ASSIGN (lv_var) TO <lv_fs>.

      gs_body-amount = gs_body-amount + <lv_fs>.

    ENDDO.

    MODIFY gt_body FROM gs_body INDEX lv_tabix TRANSPORTING amount.

  ENDLOOP.

ENDFORM.

----------------------------------------------------------------------------------
Extracted by Direct Download Enterprise version 1.3.1 - E.G.Mellodew. 1998-2005 UK. Sap Release 750
