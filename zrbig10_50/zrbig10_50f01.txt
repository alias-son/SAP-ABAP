*&---------------------------------------------------------------------*
*&  Include           ZRBIG10_50F01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  SET_INIT_VALUE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_init_value .

  s_erdat-sign    = 'I'.
  s_erdat-option  = 'BT'.
  s_erdat-low     = '20180701'.
  s_erdat-high    = sy-datum.
  APPEND s_erdat.
  CLEAR  s_erdat.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM get_data .

  DATA : lt_body LIKE gt_body.

*-- Get base data
  CLEAR gt_body.
  SELECT *
    INTO CORRESPONDING FIELDS OF TABLE gt_body
    FROM vbak
    WHERE erdat IN s_erdat.

*-- Get name1 data
  IF gt_body IS NOT INITIAL.

    lt_body = gt_body.

    SORT lt_body BY kunnr.
    DELETE ADJACENT DUPLICATES FROM lt_body COMPARING kunnr.

    CLEAR : gt_kna1.

    SELECT *
      INTO CORRESPONDING FIELDS OF TABLE gt_kna1
      FROM kna1
      FOR ALL ENTRIES IN lt_body
      WHERE kunnr EQ lt_body-kunnr.

  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM display_data .
  DATA : lv_tabix TYPE sy-tabix.

  SORT gt_kna1 BY kunnr.

  LOOP AT gt_body INTO gs_body.

    lv_tabix = sy-tabix.

    CLEAR : gs_kna1.
    READ TABLE gt_kna1 INTO gs_kna1 WITH KEY kunnr = gs_body-kunnr
    BINARY SEARCH.

    gs_body-name1 = gs_kna1-name1.

    MODIFY gt_body FROM gs_body INDEX lv_tabix TRANSPORTING name1.

  ENDLOOP.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_SCREEN100
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM display_screen100 .
  PERFORM set_layout.

  CLEAR : gs_fcat, gt_fcat.
  PERFORM set_field_catalog USING :
        "PK FIELD   COLTXT            EMPHASIZE
        'X'    'VBELN'  'SD Document'     ' ',
        ' '    'AUART'  'Document type'   ' ',
        ' '    'KUNNR'  'Customer'        ' ',
        ' '    'NAME1'  'Name'            'X',
        ' '    'NETWR'  'Amount'          ' ',
        ' '    'WAERK'  'Currency'        ' '.

  IF go_container IS INITIAL.
    PERFORM create_object.

    SET HANDLER : lcl_event_handler=>on_double_click FOR go_alv_grid.

    CALL METHOD go_alv_grid->set_table_for_first_display
      EXPORTING
        i_save                        = 'A'
        i_default                     = 'X'
        is_layout                     = gs_layout
      CHANGING
        it_outtab                     = gt_body
        it_fieldcatalog               = gt_fcat
*       it_sort                       =
      EXCEPTIONS
        invalid_parameter_combination = 1
        program_error                 = 2
        too_many_lines                = 3
        OTHERS                        = 4.
  ELSE.
    CALL METHOD go_alv_grid->refresh_table_display.
  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_LAYOUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_layout .

  CLEAR : gs_layout.
  gs_layout-zebra       = 'X'.
  gs_layout-sel_mode    = 'D'.
  gs_layout-cwidth_opt  = 'X'.
  gs_layout-totals_bef  = 'X'.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_FIELD_CATALOG
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_0023   text
*      -->P_0024   text
*      -->P_0025   text
*      -->P_0026   text
*----------------------------------------------------------------------*
FORM set_field_catalog  USING  pv_key pv_field pv_text pv_emphasize.

  gs_fcat-key       = pv_key.
  gs_fcat-fieldname = pv_field.
  gs_fcat-coltext   = pv_text.
  gs_fcat-emphasize = pv_emphasize.

  CASE pv_field.
    WHEN 'NETWR'.
      gs_fcat-cfieldname = 'WAERK'.
      gs_fcat-do_sum     = 'X'.
  ENDCASE.

  APPEND gs_fcat TO gt_fcat.
  CLEAR  gs_fcat.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CREATE_OBJECT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM create_object .
  CREATE OBJECT go_container
    EXPORTING
      repid     = sy-repid
      dynnr     = sy-dynnr
      side      = go_container->dock_at_left
      extension = 3000.
  CREATE OBJECT go_alv_grid
    EXPORTING
      i_parent = go_container.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  DOUBLE_CLICK
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_E_ROW  text
*----------------------------------------------------------------------*
FORM double_click  USING    pv_row.

  DATA : lv_subrc TYPE sy-subrc.

  CLEAR : gs_body.
  READ TABLE gt_body INTO gs_body INDEX pv_row.
  CLEAR : gs_vbap.
  CALL FUNCTION 'ZFM_DOC_DETAIL10_04'
    EXPORTING
      i_vbeln = gs_body-vbeln
    IMPORTING
      e_subrc = lv_subrc
    TABLES
      t_vbap  = gt_vbap.

  IF lv_subrc EQ 0.
    PERFORM get_wgbez_data.
    PERFORM display_wgbez_data.
    CALL SCREEN 110 STARTING AT 03 03.
  ELSE.
    EXIT.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_SCREEN110
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM display_screen110 .
  PERFORM set_pop_layout.

  CLEAR : gt_pop_fcat, gs_pop_fcat.
  PERFORM set_pop_fcat USING :
        "PK "FILED    'COLTXT         "EMPHA
        'X' 'VBELN'   'SD Document'     ' ',
        'X' 'POSNR'   'Item number'     ' ',
        ' ' 'MATKL'   'Material Group'  ' ',
        ' ' 'WGBEZ'   'Description'     'X',
        ' ' 'NETWR'   'Amount'          ' ',
        ' ' 'WAERK'   'Currency'        ' '.

  IF go_pop_cont IS INITIAL.

    PERFORM create_pop_object.
    CALL METHOD go_pop_grid->set_table_for_first_display
      EXPORTING
        i_save                        = 'A'
        i_default                     = 'X'
        is_layout                     = gs_pop_layo
      CHANGING
        it_outtab                     = gt_pop_body
        it_fieldcatalog               = gt_pop_fcat
      EXCEPTIONS
        invalid_parameter_combination = 1
        program_error                 = 2
        too_many_lines                = 3
        OTHERS                        = 4.
  ELSE.
    CALL METHOD go_pop_grid->refresh_table_display.
  ENDIF.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_POP_LAYOUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_pop_layout .
  CLEAR : gs_pop_layo.
  gs_pop_layo-zebra       = 'X'.
  gs_pop_layo-sel_mode    = 'D'.
  gs_pop_layo-cwidth_opt  = 'X'.
  gs_pop_layo-no_toolbar  = 'X'.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_POP_FCAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_0377   text
*      -->P_0378   text
*      -->P_0379   text
*      -->P_0380   text
*----------------------------------------------------------------------*
FORM set_pop_fcat  USING pv_key pv_field pv_text pv_emphasize.

  gs_pop_fcat-key       = pv_key.
  gs_pop_fcat-fieldname = pv_field.
  gs_pop_fcat-coltext   = pv_text.
  gs_pop_fcat-emphasize = pv_emphasize.

  CASE pv_field.
    WHEN 'NETWR'.
      gs_pop_fcat-cfieldname  = 'WAERK'.
      gs_pop_fcat-do_sum      = 'X'.
  ENDCASE.

  APPEND gs_pop_fcat TO gt_pop_fcat.
  CLEAR  gs_pop_fcat.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CREATE_POP_OBJECT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM create_pop_object .
  CREATE OBJECT go_pop_cont
    EXPORTING
      container_name = 'GO_CONT'.
  CREATE OBJECT go_pop_grid
    EXPORTING
      i_parent = go_pop_cont.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_WGBEZ_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM get_wgbez_data .

  DATA : lt_vbap LIKE gt_vbap.

  CLEAR : lt_vbap.
  lt_vbap = gt_vbap.

  SORT lt_vbap BY matkl ASCENDING.
  DELETE ADJACENT DUPLICATES FROM lt_vbap COMPARING matkl.

  CLEAR : gt_t023t.

  SELECT *
    INTO CORRESPONDING FIELDS OF TABLE gt_t023t
    FROM t023t
    FOR ALL ENTRIES IN lt_vbap
    WHERE matkl EQ lt_vbap-matkl
    AND   spras EQ sy-langu.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_WGBEZ_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM display_wgbez_data .
  DATA : lv_tabix TYPE sy-tabix.

  SORT gt_t023t BY matkl ASCENDING.

  LOOP AT gt_vbap INTO gs_vbap.

    CLEAR : gs_pop_body.

    MOVE-CORRESPONDING gs_vbap TO gs_pop_body.

    CLEAR : gs_t023t.
    READ TABLE gt_t023t INTO gs_t023t WITH KEY matkl = gs_pop_body-matkl
    BINARY SEARCH.

    gs_pop_body-wgbez = gs_t023t-wgbez.

    APPEND gs_pop_body TO gt_pop_body.
    CLEAR  gs_pop_body.

  ENDLOOP.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SAVE_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM save_data .
  DATA : lt_save   TYPE TABLE OF ztbig10_18,
         ls_save   TYPE ztbig10_18,
         lv_answer.

  CALL FUNCTION 'POPUP_TO_CONFIRM'
    EXPORTING
      titlebar              = 'DATA SAVE'
      text_question         = 'SAVE?'
      text_button_1         = 'YES'(001)
      text_button_2         = 'NO'(002)
      display_cancel_button = 'X'
    IMPORTING
      answer                = lv_answer.

  IF lv_answer NE '1'.
    EXIT.
  ENDIF.

*-- Data Move
  LOOP AT gt_body INTO gs_body.

    MOVE-CORRESPONDING gs_body TO ls_save.

    ls_save-erdat = sy-datum.
    ls_save-ernam = sy-uname.
    ls_save-erzet = sy-uzeit.

    APPEND ls_save TO lt_save.
    CLEAR  ls_save.

  ENDLOOP.

  LOOP AT gt_pop_body INTO gs_pop_body.

    MOVE-CORRESPONDING gs_pop_body TO ls_save.

    ls_save-posnr = gs_pop_body-posnr.
    ls_save-matkl = gs_pop_body-matkl.

    APPEND ls_save TO lt_save.
    CLEAR  ls_save.

  ENDLOOP.

*-- Save Query
  MODIFY ztbig10_18 FROM TABLE lt_save.

  IF sy-subrc EQ 0.
    COMMIT WORK.
    MESSAGE s102.
  ELSE.
    ROLLBACK WORK.
    MESSAGE s001 WITH 'SAVE ERROR'.
  ENDIF.
ENDFORM.

----------------------------------------------------------------------------------
Extracted by Direct Download Enterprise version 1.3.1 - E.G.Mellodew. 1998-2005 UK. Sap Release 750
