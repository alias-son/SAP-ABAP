*&---------------------------------------------------------------------*
*&  Include           ZRBIG10_53F01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  SET_INIT_VALUE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_init_value .

  p_lednr = '00'.
  p_gjahr = sy-datum(4).
  p_wrttp = '04'.
  p_versn = '0'.
  p_monat = sy-datum+4(2).
  p_twaer = 'EUR'.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_BASE_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM get_base_data .

  CLEAR : gt_cosp, gs_cosp.
  SELECT *
    INTO CORRESPONDING FIELDS OF TABLE gt_cosp
    FROM cosp
    WHERE lednr EQ p_lednr
    AND   gjahr EQ p_gjahr
    AND   wrttp EQ p_wrttp
    AND   versn EQ p_versn
    AND   twaer EQ p_twaer.

  IF sy-subrc NE 0.
    MESSAGE s037 DISPLAY LIKE 'E'.
    STOP.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_TEXT_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM get_text_data .

  DATA : lt_cosp  TYPE TABLE OF cosp.

  lt_cosp = gt_cosp.

  SORT lt_cosp BY kstar ASCENDING.
  DELETE ADJACENT DUPLICATES FROM lt_cosp COMPARING kstar.

  CLEAR gt_csku.
  SELECT * INTO CORRESPONDING FIELDS OF TABLE gt_csku
    FROM csku
    FOR ALL ENTRIES IN lt_cosp
    WHERE spras EQ sy-langu
    AND   kstar EQ lt_cosp-kstar
    AND   ktopl EQ 'CAIN'.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM display_data .

  DATA : lv_mon(2)  TYPE n,
         lv_sum     TYPE cosp-wtg001,
         lv_var(20).

  FIELD-SYMBOLS <lv_amt>  TYPE any.

  SORT : gt_csku BY kstar ASCENDING.

  CLEAR : gs_cosp.
  LOOP AT  gt_cosp INTO gs_cosp.

    CLEAR : gs_body.
    MOVE-CORRESPONDING gs_cosp TO gs_body.

*-- Set Cost Element
*    gs_body-kstar = gs_cosp-kstar.

*-- Set D/C indicator

    CLEAR lv_mon.        " Calculate Monthly Amount
    DO p_monat TIMES.

      lv_mon = lv_mon + 1.

      CLEAR lv_var.
      CONCATENATE 'gs_cosp-wtg0' lv_mon INTO lv_var.
      ASSIGN (lv_var) TO <lv_amt>.

      CASE gs_cosp-beknz.
        WHEN 'S'. " Debit (##)
          gs_body-s_dmbtr = gs_body-s_dmbtr + <lv_amt>.
*          lv_sum = lv_sum + <lv_amt>.
        WHEN 'H'. " Credit (##)
          gs_body-h_dmbtr = gs_body-h_dmbtr + <lv_amt>.
      ENDCASE.
    ENDDO.

*-- Set kstar text
    CLEAR gs_csku.
    READ TABLE gt_csku INTO gs_csku WITH KEY kstar = gs_body-kstar
    BINARY SEARCH.

    IF sy-subrc EQ 0.
      gs_body-ktext = gs_csku-ktext.
    ENDIF.

    COLLECT gs_body INTO gt_body.
    CLEAR   gs_body.

  ENDLOOP.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_SCREEN_100
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM display_screen_100 .

  PERFORM set_layout.

  CLEAR : gs_fcat, gt_fcat.
  PERFORM set_fcat USING :
        "pk "FieldName    "Coltext         "emphasize
        ' ' 'S_DMBTR'      'Debit'         ' ',
        'X' 'KSTAR'        'Cost Element'  ' ',
        ' ' 'KTEXT'        'General Name'  'X',
        ' ' 'H_DMBTR'      'Credit'        ' '.

  IF go_container IS INITIAL.
    PERFORM create_object.
    CALL METHOD go_alv_grid->set_table_for_first_display
      EXPORTING
        i_save                        = 'A'
        i_default                     = 'X'
        is_layout                     = gs_layout
      CHANGING
        it_outtab                     = gt_body
        it_fieldcatalog               = gt_fcat
*       it_sort                       =
      EXCEPTIONS
        invalid_parameter_combination = 1
        program_error                 = 2
        too_many_lines                = 3
        OTHERS                        = 4.
  ELSE.
    CALL METHOD go_alv_grid->refresh_table_display.
  ENDIF.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_LAYOUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_layout .
  CLEAR : gs_layout.
  gs_layout-sel_mode   = 'D'.
  gs_layout-cwidth_opt = 'X'.
  gs_layout-zebra      = 'X'.
  gs_layout-totals_bef = 'X'.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SET_FCAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_0325   text
*      -->P_0326   text
*      -->P_0327   text
*      -->P_0328   text
*----------------------------------------------------------------------*
FORM set_fcat  USING  pv_key pv_field pv_text pv_emphasize.

  gs_fcat-key       = pv_key.
  gs_fcat-fieldname = pv_field.
  gs_fcat-coltext   = pv_text.
  gs_fcat-emphasize = pv_emphasize.

  CASE pv_field.
    WHEN 'S_DMBTR' OR 'H_DMBTR'.
      "gs_fcat-cfieldname = p_twaer.
      gs_fcat-do_sum    = 'X'.
*-- ## ### ## ## ### # ### ## #### ##.
      gs_fcat-edit      = 'X'.
      gs_fcat-ref_table = 'COSP'.
      gs_fcat-ref_field = 'WTG001'.
*    WHEN 'DMBTR'.
*      gs_fcat-edit      = 'X'.
*      gs_fcat-ref_table = 'BSEG'.
  ENDCASE.

  APPEND gs_fcat TO gt_fcat.
  CLEAR  gs_fcat.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  CREATE_OBJ
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM create_object .
  CREATE OBJECT go_container
    EXPORTING
      repid     = sy-repid
      dynnr     = sy-dynnr
      side      = go_container->dock_at_left
      extension = 3000.
  CREATE OBJECT go_alv_grid
    EXPORTING
      i_parent = go_container.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  SAVE_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM save_data .
*  DATA : lt_save   TYPE TABLE OF ztbig10_21,
*         ls_save   TYPE ztbig10_21,
*         lv_answer.
*
*  CALL FUNCTION 'POPUP_TO_CONFIRM'
*    EXPORTING
*      titlebar              = 'DATA SAVE'
*      text_question         = 'SAVE?'
*      text_button_1         = 'YES'(001)
*      text_button_2         = 'NO'(002)
*      display_cancel_button = 'X'
*    IMPORTING
*      answer                = lv_answer.
*
*  IF lv_answer NE '1'.
*    EXIT.
*  ENDIF.
*
*-- Data Move
*  LOOP AT gt_body INTO gs_body.
*
*    MOVE-CORRESPONDING gs_body TO ls_save.
*
*    ls_save-erdat = sy-datum.
*    ls_save-ernam = sy-uname.
*    ls_save-erzet = sy-uzeit.
*
*    APPEND ls_save TO lt_save.
*    CLEAR  ls_save.
*
*  ENDLOOP.
*
*  LOOP AT gt_pop_body INTO gs_pop_body.
*
*    MOVE-CORRESPONDING gs_pop_body TO ls_save.
*
*
*    APPEND ls_save TO lt_save.
*    CLEAR  ls_save.
*
*  ENDLOOP.
*
*-- Save Query
*  MODIFY ztbig10_21 FROM TABLE lt_save.
*
*  IF sy-subrc EQ 0.
*    COMMIT WORK.
*    MESSAGE s102.
*  ELSE.
*    ROLLBACK WORK.
*    MESSAGE s001 WITH 'SAVE ERROR'.
*  ENDIF.
ENDFORM.

----------------------------------------------------------------------------------
Extracted by Direct Download Enterprise version 1.3.1 - E.G.Mellodew. 1998-2005 UK. Sap Release 750
